# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_items.ipynb.

# %% auto 0
__all__ = ['PAT', 'get_item_href', 'split_href_type', 'transform_items_df', 'find_stem_components', 'make_vflag_file',
           'make_vflag_href', 'split_stem_components', 'get_monthly_items']

# %% ../nbs/01_items.ipynb 4
import requests
import json
from fastcore.all import L
import pandas as pd
from typing import Any
from urllib.parse import urlparse
from pathlib import Path
import numpy as np
import re
from shapely.geometry import Polygon, box
import geopandas as gpd

# %% ../nbs/01_items.ipynb 6
from .catalogs import *

# %% ../nbs/01_items.ipynb 14
def get_item_href(href,folder, baseurl):
    return f'{baseurl}/{folder}{href[1:]}'

# %% ../nbs/01_items.ipynb 16
def split_href_type(href, first=True):
    parts = href[2:].split('.')
    return parts[0] if first else '.'.join(parts[1:])
    

# %% ../nbs/01_items.ipynb 19
def transform_items_df(items_df, folder, baseurl):
    items_df.drop(columns=['rel','type'], inplace=True)
    items_df['item_href'] = items_df.href.apply(get_item_href, folder=folder, baseurl=baseurl)
    items_df['stem'] = items_df.href.apply(split_href_type)
    items_df['suffix'] = items_df.href.apply(split_href_type,first=False)
    items_df['base_url'] = baseurl
    items_df['folder'] = folder
    return items_df

# %% ../nbs/01_items.ipynb 23
PAT = r'(.*[^_]+)_d([^_]*)_t([^_]*)_e([^_]*)_b([^_]*)_c([^_]*)_([^_]*)_(.*)$'

# %% ../nbs/01_items.ipynb 24
def find_stem_components(stem):
    matcher = re.match(PAT, stem)
    if matcher is not None:
        results = list(matcher.groups())
    else: 
        results = []
    if len(results) < 8:
        results = groups +  [''] * (8 - len(groups))
    return results[:8]
        

# %% ../nbs/01_items.ipynb 26
def make_vflag_file(o):
    return f"npp_d{o['start_date']}_t{o['first_scantime']}_e{o['end_scantime']}_b{o['orbital_nbr']}.vflag.co.tif"

# %% ../nbs/01_items.ipynb 29
def make_vflag_href(o):
    return f"{o['base_url']}/{o['folder']}/{o['vflag_file']}"

# %% ../nbs/01_items.ipynb 32
def split_stem_components(df):
    (df['product_id'], 
     df['start_date'], 
     df['first_scantime'], 
     df['end_scantime'], 
     df['orbital_nbr'], 
     df['create_datetime'],
     df['data_origin'],
     df['data_domain']
    ) = zip(*df['stem'].map(find_stem_components))
    df['vflag_file'] = df.apply(make_vflag_file, axis=1)
    df['vflag_href'] = df.apply(make_vflag_href, axis=1) 
    return df

# %% ../nbs/01_items.ipynb 36
def get_monthly_items(href,folder,baseurl):
    data = get_data(href)
    df = make_df(data, rel='item')
    df = transform_items_df(df, folder,baseurl)
    df = split_stem_components(df)
    return df
