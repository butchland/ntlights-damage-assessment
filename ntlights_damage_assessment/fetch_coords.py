# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_fetch_coords.ipynb.

# %% auto 0
__all__ = ['get_coords', 'get_rows', 'add_cache_coords']

# %% ../nbs/03_fetch_coords.ipynb 4
import requests
import json
from fastcore.all import L
import pandas as pd
from typing import Any
from urllib.parse import urlparse
from pathlib import Path
import numpy as np
import re
from shapely.geometry import Polygon, box
import geopandas as gpd
import sqlite3 as sql3
from pandas.io import sql 
import sqlalchemy as sqalc

# %% ../nbs/03_fetch_coords.ipynb 5
from ntlights_damage_assessment.build_catalogs import DB
from ntlights_damage_assessment.catalogs import get_data

# %% ../nbs/03_fetch_coords.ipynb 8
def get_coords(href, stem):
    data = get_data(href)
    shape = Polygon(data['geometry']['coordinates'][0])
    asset_href = data['assets']['image']['href']
    row = dict(
        stem=stem,
        asset_href=data['assets']['image']['href'],
        geometry=shape
    )
    return row

# %% ../nbs/03_fetch_coords.ipynb 19
def get_rows(items_df):
    rows = []
    for i in range(len(items_df)):
        item = items_df.iloc[i]
        row = get_coords(item.item_href, item.stem)
        rows.append(row) 
    return rows

# %% ../nbs/03_fetch_coords.ipynb 27
create_coords_cache_sql = '''
CREATE TABLE IF NOT EXISTS "coords_cache" (
  "stem" TEXT,
  "asset_href" TEXT,
  "geometry" TEXT
);
CREATE INDEX cache_index on coords_cache(stem);
'''
drop_coords_cache_sql = '''
DROP TABLE IF EXISTS coords_cache;
'''


# %% ../nbs/03_fetch_coords.ipynb 31
def add_cache_coords(items_df, conn, cache_table='coords_cache'):
    rows = get_rows(items_df)
    rows_df = pd.DataFrame.from_records(rows)
    rows_gdf = gpd.GeoDataFrame(rows_df, geometry='geometry', crs='EPSG:4326')
    rows_wkt  = rows_gdf.to_wkt()
    row_count = rows_wkt.to_sql(cache_table, conn, if_exists='append', index=False, method='multi')
    return row_count
